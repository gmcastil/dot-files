#!/usr/bin/env python3

import sys
import requests

from bs4 import BeautifulSoup

QUOTE_ITEMS = ['name',
               'tickerSymbol',
               'exchange',
               'price',
               'priceChange',
               'priceChangePercent']

QUERY_URL = 'https://finance.google.com/finance?q='

SYMBOLS = ['INDEXDSP:.INX',
           'INDEXDJI:.DJI',
           'INDEXSP:SPSIAD',
           'INDEXNASDAQ.IXIC']

COLORS = {'red' : '\033[0;31m',
          'green' : '\033[0;32m',
          'none' : '\033[0m'}

def quote(symbol):
    """Return a quote for an index or company

    Args:
      symbol (str): Symbol to obtain a market quote for

    Result:
      dict

    """
    url = QUERY_URL + symbol
    response = requests.get(url)
    page = BeautifulSoup(response.text, 'html.parser')

    result = dict()
    for quote_item in QUOTE_ITEMS:
        meta_tag = page.find('meta', itemprop=quote_item)
        result[quote_item] = meta_tag['content']
    return result

def main(args):
    if args:
        pass

    print('|---------------------------+----------+-----------+---------+----------|')
    print('| Company                   | Symbol   | Price     | Change  | % Change |')
    print('|---------------------------+----------+-----------+---------+----------|')
    for symbol in SYMBOLS:
        result = quote(symbol)
        name = result['name'][0:25]  # Truncating so that it fits in the table
        symbol = result['tickerSymbol']
        exchange = result['exchange']

        change = float(result['priceChange'].replace(',', ''))
        if change > 0:
            pre_color = COLORS['green']
        else:
            pre_color = COLORS['red']
        end_color = COLORS['none']

        price = float(result['price'].replace(',', ''))
        perc_change = float(result['priceChangePercent'])
        print('| {:<25s} | {:<8s} | {}{:>9,.2f}{} | {}{:>7,.2f}{} | {}{:>8,.2f}{} |'.format(name, symbol,
                                                                                         pre_color, price, end_color,
                                                                                         pre_color, change, end_color,
                                                                                         pre_color, perc_change, end_color))
    print('|---------------------------+----------+-----------+---------+----------|')


if __name__ == '__main__':
    sys.exit(main(sys.argv[1:]))
